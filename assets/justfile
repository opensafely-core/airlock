export ASSETS_SRC := "src"
export ASSETS_DIST := "dist"


default:
    just --list
    

# Remove built assets and collected static files
clean:
    rm -rf $ASSETS_DIST


# Install the Node.js dependencies
install *args="":
    #!/usr/bin/env bash
    set -euo pipefail


    # exit if lock file has not changed since we installed them. -nt == "newer than",
    # but we negate with || to avoid error exit code
    test package-lock.json -nt node_modules/.written || exit 0

    npm ci {{ args }}
    touch node_modules/.written


# Build the Node.js assets
build:
    #!/usr/bin/env bash
    set -euo pipefail


    # find files which are newer than dist/.written in the src directory. grep
    # will exit with 1 if there are no files in the result.  We negate this
    # with || to avoid error exit code
    # we wrap the find in an if in case dist/.written is missing so we don't
    # trigger a failure prematurely
    if test -f $ASSETS_DIST/.written; then
        find $ASSETS_SRC -type f -newer $ASSETS_DIST/.written | grep -q . || exit 0
    fi

    npm run build
    touch $ASSETS_DIST/.written


# install npm toolchaing, build and collect assets
ci: install build 

# rebuild all npm/static assets
rebuild: clean ci

run: install
    #!/usr/bin/env bash
    set -euo pipefail

    if [ "${ASSETS_DEV_MODE:-}" == "False" ]; then
        echo "Set ASSETS_DEV_MODE to a truthy value to run this command"
        exit 1
    fi

    npm run dev

lint: install
    npm run lint

fix: install
    npm run lint:fix

test: install
    npm run test:coverage
