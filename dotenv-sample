# Default environment variables for local development

DJANGO_DEBUG=True
DJANGO_SECRET_KEY="INSECURE-if-you-use-this-in-prod-you-will-have-a-bad-day"
DJANGO_ALLOWED_HOSTS="*"

AIRLOCK_WORK_DIR=workdir/
AIRLOCK_WORKSPACE_DIR=workspaces/
AIRLOCK_REQUEST_DIR=releases/

# This should be set in development but not in production (and will be ignored
# in AIRLOCK_API_TOKEN is set)
AIRLOCK_DEV_USERS_FILE="dev_users.json"

# Note: in development, these settings will be automatically updated by
# `just job-server/{run,stop}
# In production you can find this token for an existing backend in the
# Job Server staff area at https://jobs.opensafely.org/staff/backends/ ,
# and you can use the default value for the endpoint.
AIRLOCK_API_TOKEN=
AIRLOCK_API_ENDPOINT="http://localhost:9000/api/v2"

# The output-checking org and repo to use for notifications
# This is the repo that issues will be created/updated in 
# ( currently via a job-server endpoint)
AIRLOCK_OUTPUT_CHECKING_ORG="ebmdatalab"
AIRLOCK_OUTPUT_CHECKING_REPO="output-checking-test"

# Opentelemetry
# Set to True to log opentelemetry traces to the console in local env
# Warning can be verbose:
OTEL_EXPORTER_CONSOLE=False

# To send to honecomb in dev, create a token for the development and set it here.
# OTEL_EXPORTER_OTLP_HEADERS="x-honeycomb-team=TOKEN34"

# Uncomment to actually take the screen shots
# TAKE_SCREENSHOTS=True

# For Playwright:
# Ensure playwright browser binaries are installed to a path in the
# mounted volume that the non-root docker user has access to
PLAYWRIGHT_BROWSERS_PATH=.playwright-browsers/
# comment/uncomment as applicable
# linux
PLAYWRIGHT_BROWSER_EXECUTABLE_PATH=.playwright-browsers/chrome-linux/chrome
# mac
# PLAYWRIGHT_BROWSER_EXECUTABLE_PATH=.playwright-browsers/chrome-mac/Chromium.app/Contents/MacOS/Chromium

# Make the Approve button for a group visible
# AIRLOCK_ALLOW_GROUP_APPROVAL=True
